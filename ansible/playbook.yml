- hosts: webservers
  become: yes
  tasks:
    - name: Install git packages
      yum:
        name: git
        state: latest

    - name: Create a directory if it doesn't exist
      file:
        path: workspace/hrapp
        state: directory

    - name: Install docker
      yum:
        name: docker
        state: latest

    - name: Add docker user to a super user
      command: usermod -aG docker ec2-user 

    - name: Restart docker after adding the user
      service:
          name: docker
          state: restarted
      
    - name: Login to docker hub registry
      service:
        name: log into the docker registry
        username: ruufman@gmail.com
        password: var.docker-password
        ports: 5000:5000 
        command: docker run -name new app -d -p 

    - name: Ensure docker is running
      container:
        name: my_container
        state: started
        image: 02271589/proj:v6
        ports: 5000:5000



  






  



























  #  - name: Provisioning a new EC2 Instance
  #    yum:
  #       keypair: test100
  #       instance_type: t2.micro
  #       ami: ami-0ed752ea0f62749af
  #       region: eu-west-1
  #       count: 3
  #       security_group: sg-010220bdb1a875dac

  # tasks:
  #   - name: Create a security_group: 
  #   local_action:
  #        module: ec2_group
  #        sg_name: {{security_group}}
  #        sg_description: Security group for Webservers
  #        region: {{region}}
  #        rules: 
  #          - protocol: tcp
  #            from_port: 22
  #            to_port: 22
  #            cidr_ip: 0.0.0.0/0

  #          - protocol: tcp
  #            from_port: 80
  #            to_port: 80
  #            cidr_ip: 0.0.0.0/0

  #          - protocol: -1
  #            from_port: 22
  #            to_port: 22
  #            cidr_ip: 0.0.0.0/0

  # tasks:
  #   - name: Create 3 EC2 Instances
  #   local_action:
  #         instance_type: {{instance_type:}}
  #         keypair:: {{keypair:}}
  #         instance_region: {{region}}
  #         instance_count: {{count:}}
  #         security_group: {{security_group}}
  #         ami: {{ami}}

  # tasks:
  #   - name: Add tagging to the EC2 Instances
  #   local_action: ec2_tag resource={{ item.id }} region= {{ region }} state=present
  #     with_items: "{{ ec2.instances }}"
  #     args:
  #       tags:
  #         Name: HrApplication
        


